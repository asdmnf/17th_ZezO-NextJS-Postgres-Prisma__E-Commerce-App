generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Product {
  id                     String                 @id @default(uuid())
  name                   String
  description            String
  price                  Int
  isAvailableForPurchase Boolean                @default(true)
  imagePath              String
  filePath               String
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  orders                 Order[]
  downloadVerfication    downloadVerification[]
  discountCoupons        discountCoupon[]
}

model Order {
  id               String         @id @default(uuid())
  paidPrice        Int
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  userId           String
  productId        String
  user             User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  product          Product        @relation(fields: [productId], references: [id], onDelete: Restrict)
  discountCouponId String?
  discountCoupon   discountCoupon? @relation(fields: [discountCouponId], references: [id], onDelete: Restrict)
}

model downloadVerification {
  id        String   @id @default(uuid())
  expiredAt DateTime
  createdAt DateTime @default(now())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model discountCoupon {
  id                        String       @id @default(uuid())
  code                      String       @unique
  discountAmount            Int
  discountType              DiscountType
  uses                      Int          @default(0)
  limit                     Int?
  isActive                  Boolean      @default(true)
  isAvailableForAllProducts Boolean      @default(false)
  expiresAt                 DateTime?
  createdAt                 DateTime     @default(now())
  products                  Product[]
  orders                    Order[]
}

enum DiscountType {
  PERCENTAGE
  FIXED
}
